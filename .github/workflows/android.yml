name: Build Android

on:
  push:
    branches: [ "main", "develop", "cicd" ]


defaults:
  run:
    working-directory: ./Juntos

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 1

      - uses: actions/checkout@v3
      - name: cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-


      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: Juntos/package-lock.json

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install

      - name: Build Ionic App
        run: ionic build

      - name: Copy Android
        run: ionic capacitor copy android

      - name: Build Android Dev APK
        run: ionic capacitor build android

      - name: Build Android Release APK
        run: ionic capacitor build android --release --prod

      - name: Generate the Android App Bundle
        working-directory: ./android/
        run: ./gradlew bundle

      - name: Upload dev APK
        uses: actions/upload-artifact@v1
        with:
          name: app-dev
          path: apk/app-debug.apk

      - name: Upload release bundle
        uses: actions/upload-artifact@v1
        with:
          name: app-release
          path: apk/app.aab
