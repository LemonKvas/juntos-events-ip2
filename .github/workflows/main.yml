name: main

on:
  push:
    branches: ["main", "develop", "cicd"]
  pull_request:
    branches: ["main", "develop", "cicd"]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
    steps:
      - uses: actions/checkout@v3
      - name: cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-


      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install --force

      - name: Build
        run: npm run build

#      - name: Lint
#        if: always()
#        run: npm run lint-and-fix
#
#      - name: Unit Tests
#        if: always()
#        run: npm run test

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v3
      - run: npm install && npm run lint-and-fix

  unit_tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - uses: actions/checkout@v3
      - run: npm ci && npm run test

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JUNTOS_IP2_SS22 }}'
          projectId: juntos-ip2-ss22
          channelId: live


  deploy2:
    name: Deploy2
    #needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: npm install && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JUNTOS_IP2_SS22 }}'
          projectId: juntos-ip2-ss22
          channelId: live
  

  #hostDocuToNetlify:
  #  runs-on: ubuntu-18.04
  #  steps:
  #    - uses: actions/checkout@v2


   #   - name: Deploy to Netlify
   #     uses: nwtgck/actions-netlify@v1.2
   #     with:
   #       publish-dir: './documentation'
   #       production-branch: develop
   #       github-token: ${{ secrets.GITHUB_TOKEN }}
   #       deploy-message: "Documentation deployed from GithubActions"
   #       enable-pull-request-comment: false
   #       enable-commit-comment: true
   #       overwrites-pull-request-comment: true
   #     env:
   #       NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
   #       NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
   #     timeout-minutes: 1







